{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkumar/Documents/games-app/src/GamesComponent.js\";\nimport React from 'react';\nimport './GamesComponent.css';\nexport class GamesComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSet: [],\n      filteredData: [],\n      pageNo: 1,\n      searchKey: '',\n      sortField: 'rank'\n    };\n    this.sortData = this.sortData.bind(this);\n  }\n\n  componentDidMount() {\n    this.readData();\n  }\n\n  readData() {\n    const storageData = localStorage.getItem('gamesData');\n\n    if (storageData) {\n      const parsedData = JSON.parse(storageData);\n      this.setState({\n        dataSet: parsedData\n      });\n      this.setState({\n        filteredData: parsedData\n      });\n    } else {\n      fetch(\"/data.csv\").then(res => res.text()).then(fileData => {\n        const csvData = fileData.split(/\\r\\n|\\n/);\n        const keys = csvData[0].split(',');\n        const values = [];\n        let data;\n        let item;\n\n        for (let i = 1; i < csvData.length; i++) {\n          data = csvData[i].split(',');\n\n          if (data.length === keys.length) {\n            item = {};\n\n            for (var j = 0; j < keys.length; j++) {\n              item[keys[j].toLowerCase()] = data[j];\n            }\n\n            values.push(item);\n          }\n        }\n\n        if (values.length) {\n          localStorage.setItem('gamesData', JSON.stringify(values));\n          this.setState({\n            dataSet: values\n          });\n          this.setState({\n            filteredData: values\n          });\n        }\n      });\n    }\n  }\n\n  handleEnter(e) {\n    if (e.keyCode === 13) {\n      var val = document.getElementById('pageNoId').value;\n      if (val < 1) val = 1;\n      if (val > Math.ceil(this.state.filteredData.length / 20)) val = Math.ceil(this.state.filteredData.length / 20);\n      this.setState({\n        pageNo: val\n      });\n      document.getElementById('pageNoId').value = val;\n    }\n  }\n\n  filterDataSet(e) {\n    const searchQuery = e.target.value;\n    this.setState({\n      searchKey: searchQuery\n    });\n    let dataToBeRendered = [];\n    const data = this.state.dataSet;\n    let dataItem;\n\n    for (let i = 0; i < data.length; i++) {\n      dataItem = data[i];\n\n      for (let key in dataItem) {\n        if (dataItem.hasOwnProperty(key) && this.hasQueryMatched(searchQuery, dataItem[key])) {\n          dataToBeRendered.push(dataItem);\n          break;\n        }\n      }\n    }\n\n    this.setState({\n      filteredData: dataToBeRendered\n    });\n    this.setState({\n      pageNo: 1\n    });\n    document.getElementById('pageNoId').value = 1;\n  }\n\n  hasQueryMatched(searchQuery, value) {\n    return (value + '').toLowerCase().indexOf(searchQuery) > -1;\n  }\n\n  sortData(field) {\n    this.setState({\n      sortField: field\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          filteredData = _this$state.filteredData,\n          pageNo = _this$state.pageNo,\n          sortField = _this$state.sortField;\n    const dataForSplice = filteredData.concat();\n    let k = 0;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"titleId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Games List\")), React.createElement(\"div\", {\n      id: \"searchId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchInput\",\n      name: \"searchQuery\",\n      placeholder: \"Search\",\n      onChange: this.filterDataSet.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"searchIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: 'grid',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: 'tableHead',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('rank'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Rank\")), React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('platform'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Platform\")), React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('genre'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Genre\")), React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('publisher'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Publisher\")), React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('global_sales'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Global_Sales\")), React.createElement(\"td\", {\n      className: \"headerLabel\",\n      onClick: () => this.sortData('year'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Year\")))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, dataForSplice.sort((a, b) => {\n      a[sortField].localeCompare(b[sortField]);\n    }).splice((pageNo - 1) * 20, 20).map(data => React.createElement(\"tr\", {\n      key: k++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, data.rank), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, data.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, data.platform), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, data.genre), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, data.publisher), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, data.global_sales), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, data.year)))))), React.createElement(\"div\", {\n      id: \"paginationId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Page \", React.createElement(\"input\", {\n      id: \"pageNoId\",\n      type: \"number\",\n      defaultValue: pageNo,\n      name: \"pageNo\",\n      onKeyDown: this.handleEnter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), \" of \", Math.ceil(filteredData.length / 20)));\n  }\n\n}","map":{"version":3,"sources":["/Users/mayankkumar/Documents/games-app/src/GamesComponent.js"],"names":["React","GamesComponent","Component","constructor","props","state","dataSet","filteredData","pageNo","searchKey","sortField","sortData","bind","componentDidMount","readData","storageData","localStorage","getItem","parsedData","JSON","parse","setState","fetch","then","res","text","fileData","csvData","split","keys","values","data","item","i","length","j","toLowerCase","push","setItem","stringify","handleEnter","e","keyCode","val","document","getElementById","value","Math","ceil","filterDataSet","searchQuery","target","dataToBeRendered","dataItem","key","hasOwnProperty","hasQueryMatched","indexOf","field","render","dataForSplice","concat","k","sort","a","b","localeCompare","splice","map","rank","name","platform","genre","publisher","global_sales","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './GamesComponent.css';\n\nexport class GamesComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSet: [],\n            filteredData: [],\n            pageNo: 1,\n            searchKey: '',\n            sortField: 'rank'\n        }\n        this.sortData = this.sortData.bind(this);\n    }\n\n    componentDidMount() {\n        this.readData();\n    }\n\n    readData() {\n        const storageData = localStorage.getItem('gamesData');\n        if (storageData) {\n            const parsedData = JSON.parse(storageData);\n            this.setState({ dataSet: parsedData });\n            this.setState({ filteredData: parsedData });\n        } else {\n            fetch(\"/data.csv\")\n            .then(res => res.text())\n            .then(fileData => {\n                const csvData = fileData.split(/\\r\\n|\\n/);\n                const keys = csvData[0].split(',');\n                const values = [];\n                let data;\n                let item;\n                for (let i = 1; i < csvData.length; i++) {\n                    data = csvData[i].split(',');\n                    if (data.length === keys.length) {\n                        item = {};\n                        for (var j = 0; j < keys.length; j++) {\n                            item[keys[j].toLowerCase()] = data[j];\n                        }\n                        values.push(item);\n                    }\n                }\n                if (values.length) {\n                    localStorage.setItem('gamesData', JSON.stringify(values));\n                    this.setState({ dataSet: values });\n                    this.setState({ filteredData: values });\n                }\n            });\n        }\n    }\n\n    handleEnter(e) {\n        if (e.keyCode === 13) {\n            var val = document.getElementById('pageNoId').value;\n            if (val < 1)\n                val = 1;\n            if (val > Math.ceil(this.state.filteredData.length / 20))\n                val = Math.ceil(this.state.filteredData.length / 20);\n            this.setState({ pageNo: val });\n            document.getElementById('pageNoId').value = val;\n        }\n    }\n\n    filterDataSet(e) {\n        const searchQuery = e.target.value;\n        this.setState({ searchKey: searchQuery });\n        let dataToBeRendered = [];\n        const data = this.state.dataSet;\n        let dataItem;\n        for (let i = 0; i < data.length; i++) {\n            dataItem = data[i];\n            for (let key in dataItem) {\n                if (dataItem.hasOwnProperty(key) && this.hasQueryMatched(searchQuery, dataItem[key])) {\n                    dataToBeRendered.push(dataItem);\n                    break;\n                }\n            }\n        }\n        this.setState({ filteredData: dataToBeRendered });\n        this.setState({ pageNo: 1 });\n        document.getElementById('pageNoId').value = 1;\n    }\n\n    hasQueryMatched(searchQuery, value) {\n        return ((value + '').toLowerCase().indexOf(searchQuery) > -1);\n    }\n\n    sortData(field) {\n        this.setState({ sortField: field });\n    }\n\n    render() {\n        const { filteredData, pageNo, sortField } = this.state;\n        const dataForSplice = filteredData.concat();\n        let k = 0;\n        return (\n            <div>\n                <div id=\"titleId\">\n                    <span>Games List</span>\n                </div>\n                <div id=\"searchId\">\n                    <input type=\"text\" id=\"searchInput\" name=\"searchQuery\" placeholder=\"Search\" onChange={this.filterDataSet.bind(this)} />\n                    <span className={\"searchIcon\"}></span>\n                </div>\n                <div className={'grid'}>\n                    <table className={\"table table-bordered\"}>\n                        <thead className={'tableHead'}>\n                            <tr>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('rank')}>\n                                    <span>Rank</span>\n                                </td>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('name')}>\n                                    <span>Name</span>\n                                </td>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('platform')}>\n                                    <span>Platform</span>\n                                </td>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('genre')}>\n                                    <span>Genre</span>\n                                </td>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('publisher')}>\n                                    <span>Publisher</span>\n                                </td>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('global_sales')}>\n                                    <span>Global_Sales</span>\n                                </td>\n                                <td className={\"headerLabel\"} onClick={() => this.sortData('year')}>\n                                    <span>Year</span>\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dataForSplice.sort((a, b) => {\n                                (a[sortField].localeCompare(b[sortField]))\n                            })\n                            .splice((pageNo - 1) * 20, 20)\n                            .map(data => (\n                                <tr key={k++}>\n                                    <td>{data.rank}</td>\n                                    <td>{data.name}</td>\n                                    <td>{data.platform}</td>\n                                    <td>{data.genre}</td>\n                                    <td>{data.publisher}</td>\n                                    <td>{data.global_sales}</td>\n                                    <td>{data.year}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div id=\"paginationId\">\n                    Page <input id=\"pageNoId\" type=\"number\" defaultValue={pageNo} name=\"pageNo\" onKeyDown={this.handleEnter.bind(this)} /> of {Math.ceil(filteredData.length / 20)}\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}